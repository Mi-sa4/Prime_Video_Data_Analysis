# -*- coding: utf-8 -*-
"""PRIME.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nC2C0HEchy_O4QTK-wLdpfWzk7ckx2qV
"""

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns

"""# Cleaning noise data from list_in column
For eg: Arthouse, Arts, , International,LGBTQ, Military and War, Music Video and Concerts, Special Interest,Young Adult Audience
, and Culture, Fitness



# Converting Anime Short form into Animation.
# Its done in excel.

1) Genre, countries , release_year, duration, genre , rating .
"""

df=pd.read_csv('cleaned_data_set.csv')
df.head()

df.info()

"""Null data in columns: 1) director 2) cast 3) contry 4) date_added 5) rating

# Dealing with null values.
"""

df=df.fillna({
    'director':'No',
    'cast':'No',
    'country':'No',
    'date_added':0,
    'rating':0,
})
#Converted object data type null value into 'NO'
# Converted int data type null value into 0.

df.info()
#Without null value data.

"""# Checking duplicates data."""

df.duplicated().sum()
#Duplicated value is not present in data.

df.describe()

df.info()

df.head()

"""# Removing Column which is not requried :
# director, cast, date_added and description.



"""

cols=['director','cast','date_added','description']
df.drop(cols,axis=1,inplace=True)
#Droping data columns.

df.head()

df['listed_in']=df['listed_in'].astype(str)

"""# **1) What are the most common genres on Prime.**"""

df['listed_in'].str.split(', ').explode().value_counts().head(1)

df['listed_in']=df['listed_in'].astype(str).str.split(', ')
genre_counts=df['listed_in'].explode().value_counts().head(10)
plt.figure(figsize=(10,6))
sns.barplot(x=genre_counts.values,y=genre_counts.index,palette='viridis')
plt.title("Top 10 genres in dataset")
plt.xlabel("number of Titles")
plt.ylabel('Genres')
plt.tight_layout()
plt.show()

"""# **2) Which Countries Produce the most content?**"""

# Step 1: Filter out 'No' values and count top 10 countries
country_counts = df[df['country'] != 'No']['country'].value_counts().head(10)

# Step 2: Convert Series to DataFrame with proper column names
country_df = pd.DataFrame({'Country': country_counts.index, 'Count': country_counts.values})

# Step 3: Plot the bar chart using Seaborn
plt.figure(figsize=(10, 6))
sns.barplot(data=country_df, x='Count', y='Country', palette='Blues_r')

plt.title("Top 10 Countries Producing the Most Content", fontsize=14)
plt.xlabel("Number of Titles")
plt.ylabel("Country")
plt.tight_layout()
plt.show()

"""# **3) What is the trend of content released each year?**"""

print(df['release_year'].unique())
print(df['release_year'].dtype)

yearly_counts=df[df['release_year']!=0].value_counts().sort_index()
print(yearly_counts)

plt.figure(figsize=(12,6))
plt.plot(yearly_counts.index,yearly_counts.values, marker='o',color='purple')

plt.title("Trend of Content Relased Each Year",fontsize=14)
plt.xlabel("Release Year")
plt.ylabel("Number of Titles")
plt.grid(True)
plt.tight_layout()
plt.show()

"""# **4) What is the average duration of content per genre?**"""

df['duration'].unique()
df['duration'].nunique()

df_movies=df[df['type']=='Movie'].copy()
df_movies['duration']=df_movies['duration'].str.replace('min','',regex=False)
df_movies['duration']=pd.to_numeric(df_movies['duration'],errors='coerce')

df_movies['listed_in']=df_movies['listed_in'].astype(str).str.split(', ')
df_exploded=df_movies.explode('listed_in')

genre_avg_duration = df_exploded.groupby('listed_in')['duration'].mean().sort_values(ascending=False)
print(genre_avg_duration)

"""# **Which rating are most frequent?**"""

# Which ratings are most frequent?
rating_counts=df[df['rating']!=0]['rating'].value_counts()
print(rating_counts.head(10))

#Plotting.
plt.figure(figsize=(10,6))
sns.barplot(x=rating_counts.values[:10], y=rating_counts.index[:10], palette='magma')

plt.title("Top 10 Most Frequent Content Ratings", fontsize=14)
plt.xlabel("Number of Titles")
plt.ylabel("Rating")
plt.tight_layout()
plt.show()